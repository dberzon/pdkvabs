#N canvas 416 114 1474 1035 12;
#X obj 44 165 inlet~;
#X obj 436 531 * 3;
#X obj 436 556 / 2;
#X obj 469 30 inlet;
#X text 526 27 fft size;
#X obj 44 190 *~;
#X obj 44 215 rfft~, f 30;
#X text 54 390 write real/imag to delay lines;
#X text 54 414 so values for bin i occur every i*blocksize samples
;
#X text 57 444 in delay buf;
#X obj 785 56 inlet;
#X obj 201 568 -~;
#X obj 250 520 wrap~;
#X text 703 488 since values for bin i occur every i*blocksize samples
;
#X text 709 523 need to multiply by blocksize to get bin i's progression
;
#X text 714 547 in time (we're also limited to a resolution time-wise
of;
#X text 719 576 blocksize since we only have values for each bin every
;
#X text 718 606 blocksize);
#X obj 201 618 /~ 44.1;
#X text 291 624 divide by samprate in ms for delread units;
#X obj 87 930 rifft~, f 65;
#X obj 146 980 *~;
#X obj 146 1005 outlet~;
#X obj 355 258 *~;
#X obj 85 265 *~;
#X obj 71 338 delwrite~ \$0-ezfftdel_r \$2;
#X obj 302 326 delwrite~ \$0-ezfftdel_i \$2;
#X obj 571 12 inlet;
#X text 657 7 fft on/off;
#X text 49 36 dkfftdelay~ - spectral delay;
#X text 54 60 args: fftsize \, max delay * 4 \, delay array \, fb array
;
#X obj 203 490 tabreceive~ \$3;
#X obj 441 284 tabreceive~ \$4;
#X obj 619 50 loadbang;
#X msg 625 154 1;
#X obj 771 135 / 1000;
#X obj 859 143 symbol;
#X msg 859 168 set \$1;
#X obj 944 149 symbol;
#X msg 944 174 set \$1;
#X text 59 92 inlets: signal \, fftsize \, fft on/off;
#X text 72 122 messages (samplerate \, set_delay \, set_fb);
#X text 1320 32 derek kwan;
#X text 1325 65 pdkvabs;
#X text 1327 98 GPL V 3 2017;
#X text 840 57 messages;
#X obj 984 123 s \$0-fftdel_dry;
#X obj 1104 142 s \$0-fftdel_wet;
#X obj 262 729 r \$0-fftdel_wet;
#X obj 41 502 r \$0-fftdel_dry;
#X obj 783 85 route samplerate set_delay set_fb dry wet clear, f 68
;
#X msg 293 237 clear;
#X obj 619 182 t b f, f 10;
#X obj 388 692 delread4~ \$0-ezfftdel_i;
#X obj 149 694 delread4~ \$0-ezfftdel_r;
#X obj 295 191 del 0;
#X msg 587 345 set \$1 4;
#X obj 201 593 *~ 1024;
#X obj 81 880 /~ 1536, f 16;
#X obj 523 872 /~ 1536, f 10;
#X obj 21 691 *~;
#X obj 76 688 *~;
#X obj 106 830 *~;
#X obj 494 800 *~;
#X obj 492 118 f \$1;
#X obj 206 163 pdkvabs/dkhannblock~ \$1;
#X obj 617 88 t b b, f 12;
#X obj 557 441 switch~ \$1 4;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 58 1;
#X connect 2 0 59 1;
#X connect 3 0 64 0;
#X connect 5 0 6 0;
#X connect 6 0 25 0;
#X connect 6 0 60 0;
#X connect 6 1 26 0;
#X connect 6 1 61 0;
#X connect 10 0 50 0;
#X connect 11 0 57 0;
#X connect 12 0 11 1;
#X connect 18 0 53 0;
#X connect 18 0 54 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 23 0 26 0;
#X connect 24 0 25 0;
#X connect 27 0 52 0;
#X connect 31 0 11 0;
#X connect 31 0 12 0;
#X connect 32 0 24 1;
#X connect 32 0 23 1;
#X connect 33 0 66 0;
#X connect 34 0 52 0;
#X connect 35 0 18 1;
#X connect 36 0 37 0;
#X connect 37 0 31 0;
#X connect 38 0 39 0;
#X connect 39 0 32 0;
#X connect 48 0 62 1;
#X connect 48 0 63 1;
#X connect 49 0 60 1;
#X connect 49 0 61 1;
#X connect 50 0 35 0;
#X connect 50 1 36 0;
#X connect 50 2 38 0;
#X connect 50 3 46 0;
#X connect 50 4 47 0;
#X connect 50 5 51 0;
#X connect 51 0 26 0;
#X connect 51 0 25 0;
#X connect 52 0 55 0;
#X connect 52 1 67 0;
#X connect 53 0 23 0;
#X connect 53 0 63 0;
#X connect 54 0 24 0;
#X connect 54 0 62 0;
#X connect 55 0 51 0;
#X connect 56 0 67 0;
#X connect 57 0 18 0;
#X connect 58 0 20 0;
#X connect 59 0 20 1;
#X connect 60 0 58 0;
#X connect 61 0 59 0;
#X connect 62 0 58 0;
#X connect 63 0 59 0;
#X connect 64 0 56 0;
#X connect 64 0 1 0;
#X connect 64 0 57 1;
#X connect 64 0 65 0;
#X connect 65 0 5 1;
#X connect 65 0 21 1;
#X connect 66 0 34 0;
#X connect 66 1 64 0;
